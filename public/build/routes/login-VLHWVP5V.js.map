{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\91754\\Desktop\\Todo-Re\\app\\routes\\login.tsx?browser", "../../../app/routes/login.tsx"],
  "sourcesContent": ["export { default, links } from \"C:\\\\Users\\\\91754\\\\Desktop\\\\Todo-Re\\\\app\\\\routes\\\\login.tsx\";", "import { json, LinksFunction, redirect } from \"remix\";\r\nimport {\r\n  useSearchParams,\r\n  ActionFunction,\r\n  useActionData,\r\n  LoaderFunction,\r\n} from \"remix\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport styleUrl from \"~/styles/login.css\";\r\nimport { db } from \"~/utils/db.server\";\r\nimport {\r\n  createUserSession,\r\n  login,\r\n  getUserId,\r\n  register,\r\n} from \"~/utils/session.server\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const links: LinksFunction = () => {\r\n  return [{ rel: \"stylesheet\", href: styleUrl }];\r\n};\r\ntype ActionData = {\r\n  formError?: string;\r\n  nameError?: string | undefined;\r\n  passwordError?: string | undefined;\r\n  fields?: {\r\n    loginType: string;\r\n    name: string;\r\n    password: string;\r\n  };\r\n};\r\nconst badRequest = (data: ActionData) => {\r\n  return json(data, { status: 400 });\r\n};\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await getUserId(request);\r\n  if (userId) {\r\n    return redirect(\"/todo\");\r\n  }\r\n  return null;\r\n};\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const req = await request;\r\n  console.log(request);\r\n  const form = await request.formData();\r\n  const loginType = form.get(\"loginType\");\r\n  const name = form.get(\"username\");\r\n  const password = form.get(\"password\");\r\n  const redirectTo = form.get(\"redirectTo\") || \"/todo\";\r\n  //Filter : 1 Typesafety\r\n  if (\r\n    typeof loginType !== \"string\" ||\r\n    typeof name !== \"string\" ||\r\n    typeof password !== \"string\" ||\r\n    typeof redirectTo !== \"string\"\r\n  ) {\r\n    return badRequest({ formError: \"Form not submitted correctly\" });\r\n  }\r\n  //Filter : 2 Invalid username and password\r\n  if (name.length < 3) return badRequest({ nameError: \"Invalid name\" });\r\n  if (password.length < 6)\r\n    return badRequest({ passwordError: \"Invalid password\" });\r\n  const fields = { name, password, loginType };\r\n  //Filter : 3 Login or Register\r\n  switch (loginType) {\r\n    case \"login\": {\r\n      const user = await login({ username: name, password: password });\r\n      console.log({ user });\r\n      if (!user)\r\n        return badRequest({ fields, formError: \"Wrong username/passowrd\" });\r\n      return createUserSession(user.id, redirectTo);\r\n    }\r\n    case \"register\": {\r\n      const userExists = await db.user.findFirst({ where: { username: name } });\r\n      if (userExists) {\r\n        return badRequest({ fields, formError: \"Username already exists\" });\r\n      }\r\n      const user = await register({ username: name, password: password });\r\n      if (!user) {\r\n        return badRequest({\r\n          fields,\r\n          formError: `Something went wrong trying to create a new user.`,\r\n        });\r\n      }\r\n      return createUserSession(user.id, redirectTo);\r\n    }\r\n    default: {\r\n      return badRequest({\r\n        fields,\r\n        formError: \"Login type invalid\",\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport default function Login() {\r\n  const actionData = useActionData<ActionData>();\r\n  const [searchParams] = useSearchParams();\r\n  return (\r\n    <>\r\n      <script src=\"https://accounts.google.com/gsi/client\" async defer></script>\r\n      <div\r\n        id=\"g_id_onload\"\r\n        data-client_id=\"600930389454-sjq229oum7ar99jqt9nreutq4r4j8bbk.apps.googleusercontent.com\"\r\n        data-login_uri=\"http://localhost:3000/login\"\r\n        data-auto_prompt=\"false\"\r\n      ></div>\r\n      <div\r\n        className=\"g_id_signin\"\r\n        data-type=\"standard\"\r\n        data-size=\"large\"\r\n        data-theme=\"outline\"\r\n        data-text=\"sign_in_with\"\r\n        data-shape=\"rectangular\"\r\n        data-logo_alignment=\"left\"\r\n      ></div>\r\n      <div className=\"login-container\">\r\n        <div className=\"content\">\r\n          <h1>Login</h1>\r\n          {actionData?.formError && <h2>{actionData?.formError}</h2>}\r\n          {actionData?.nameError && <h2>{actionData?.nameError}</h2>}\r\n          {actionData?.passwordError && <h2>{actionData?.passwordError}</h2>}\r\n          <form method=\"post\">\r\n            <input\r\n              type=\"hidden\"\r\n              name=\"redirectTo\"\r\n              value={searchParams.get(\"redirectTo\") ?? undefined}\r\n            />\r\n            <fieldset>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"loginType\"\r\n                  value=\"login\"\r\n                  defaultChecked\r\n                />{\" \"}\r\n                Login\r\n              </label>\r\n              <label>\r\n                <input type=\"radio\" name=\"loginType\" value=\"register\" />{\" \"}\r\n                Register\r\n              </label>\r\n            </fieldset>\r\n            <div className=\"input-fields\">\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"username-input\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  defaultValue={actionData?.fields?.name}\r\n                  id=\"username-input\"\r\n                  name=\"username\"\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"password-input\">Password</label>\r\n                <input\r\n                  id=\"password-input\"\r\n                  defaultValue={actionData?.fields?.password}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                />\r\n              </div>\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AASA,gBAAmB;AACnB,qBAKO;AAGA,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AA4EtB,iBAAiB;AA/FhC;AAgGE,QAAM,aAAa;AACnB,QAAM,CAAC,gBAAgB;AACvB,SACE,0DACE,oCAAC,UAAD;AAAA,IAAQ,KAAI;AAAA,IAAyC,OAAK;AAAA,IAAC,OAAK;AAAA,MAChE,oCAAC,OAAD;AAAA,IACE,IAAG;AAAA,IACH,kBAAe;AAAA,IACf,kBAAe;AAAA,IACf,oBAAiB;AAAA,MAEnB,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,aAAU;AAAA,IACV,aAAU;AAAA,IACV,cAAW;AAAA,IACX,aAAU;AAAA,IACV,cAAW;AAAA,IACX,uBAAoB;AAAA,MAEtB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,MAAI,UACH,0CAAY,cAAa,oCAAC,MAAD,MAAK,yCAAY,YAC1C,0CAAY,cAAa,oCAAC,MAAD,MAAK,yCAAY,YAC1C,0CAAY,kBAAiB,oCAAC,MAAD,MAAK,yCAAY,gBAC/C,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAO,mBAAa,IAAI,kBAAjB,YAAkC;AAAA,MAE3C,oCAAC,YAAD,MACE,oCAAC,SAAD,MACE,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,IACN,gBAAc;AAAA,MACb,KAAI,UAGT,oCAAC,SAAD,MACE,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAQ,MAAK;AAAA,IAAY,OAAM;AAAA,MAAc,KAAI,cAIjE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAiB,aAChC,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,IAAG;AAAA,IACH,MAAK;AAAA,OAGT,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAiB,aAChC,oCAAC,SAAD;AAAA,IACE,IAAG;AAAA,IACH,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,MAAK;AAAA,OAGT,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,KAAS;AAAA;",
  "names": []
}
